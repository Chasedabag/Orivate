-- // Dependencies and Libraries
local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sepper2023/Scorp.xyz/refs/heads/main/LinoriaFixed'))()
local ThemeManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/Awakenchan/Misc-Release/main/linoracolor'))()
local SaveManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sepper2023/Scorp.xyz/refs/heads/main/SaveManagerFixed'))()

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local CurrentCamera = game:GetService("Workspace").CurrentCamera
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- // Silent Aim Variables
local SilentAim = {
    Enabled = false,
    Fov = 600,
    ShowFov = false,
    HitScan = "Head"
}

-- // Silent Aim Modules
local Modules = {}
do
    local Shared
    for _, v in getgc(true) do
        if typeof(v) == "table" and rawget(v, "require") and not rawget(v, "rawget") then
            Shared = v
        end
    end

    local Cache = debug.getupvalue(Shared.require, 1)._cache
    local function Require(Module)
        return Cache[Module].module
    end

    Modules.ReplicationInterface = Require("ReplicationInterface")
    Modules.BulletInterface = Require("BulletInterface")
    Modules.PublicSettings = Require("PublicSettings")
end

-- // Silent Aim Functions
local Functions = {}
do
    function Functions:GetClosestToMouse()
        local Closest, HitPart = SilentAim.Fov, nil
        Modules.ReplicationInterface.operateOnAllEntries(function(Player, Entry)
            if Player ~= LocalPlayer then
                if Entry._alive and Player.Team ~= LocalPlayer.Team and Entry._thirdPersonObject and Entry._thirdPersonObject._characterModelHash then
                    local HitBox = Entry._thirdPersonObject._characterModelHash[SilentAim.HitScan]
                    if HitBox then
                        local ScreenPosition, OnScreen = CurrentCamera:WorldToViewportPoint(HitBox.Position)
                        local Magnitude = (UserInputService:GetMouseLocation() - Vector2.new(ScreenPosition.X, ScreenPosition.Y)).Magnitude
                        if OnScreen and Magnitude < Closest then
                            Closest = Magnitude
                            HitPart = HitBox
                        end
                    end
                end
            end
        end)
        return HitPart
    end

    function Functions:CalCulateBulletDrop(To, From, MuzzleVelocity)
        local Distance = (To - From).Magnitude
        local Time = Distance / MuzzleVelocity
        local Vertical = 0.5 * Modules.PublicSettings.bulletAcceleration * Time^2
        return Vertical
    end
end

-- // Silent Aim Hook
do
    local OldBulletInterface = Modules.BulletInterface.newBullet
    Modules.BulletInterface.newBullet = function(BulletData)
        if BulletData.extra and SilentAim.Enabled then
            local HitPart = Functions:GetClosestToMouse()
            if HitPart then
                local BulletSpeed = BulletData.extra.firearmObject:getWeaponStat("bulletspeed")
                local VerticalDrop = Functions:CalCulateBulletDrop(HitPart.Position, BulletData.position, BulletSpeed)
                local LookVector = (HitPart.Position - VerticalDrop - BulletData.position).unit

                for i, v in debug.getstack(2) do
                    if typeof(v) == "Vector3" and (BulletData.velocity.Unit - v).Magnitude < 0.1 then
                        debug.setstack(2, i, LookVector)
                        break
                    end
                end

                BulletData.velocity = LookVector * BulletSpeed
            end
        end
        return OldBulletInterface(BulletData)
    end
end

-- // GUI Setup
local Window = Library:CreateWindow({
    Title = 'OneTake | Silent Aim',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

local Tabs = {
    Combat = Window:AddTab('Combat'),
    Visuals = Window:AddTab('Visuals'),
    Settings = Window:AddTab("Settings")
}

ThemeManager:SetLibrary(Library)
ThemeManager:ApplyToTab(Tabs.Settings)
ThemeManager:ApplyTheme("Tokyo Night")

SaveManager:SetLibrary(Library)
SaveManager:SetFolder('SilentAimConfig')
SaveManager:IgnoreThemeSettings()
SaveManager:BuildConfigSection(Tabs.Settings)
Library:SetWatermark('https://discord.gg/t9yJxRy6')

local Combat_SilentAim = Tabs.Combat:AddLeftGroupbox("Silent Aim")

-- // GUI Elements
Combat_SilentAim:AddToggle('SilentAimEnabled', {
    Text = "Enable Silent Aim",
    Default = false,
    Callback = function(value)
        SilentAim.Enabled = value
    end
})

Combat_SilentAim:AddToggle('SilentAimShowFov', {
    Text = "Show FOV",
    Default = false,
    Callback = function(value)
        SilentAim.ShowFov = value
    end
})

Combat_SilentAim:AddSlider('SilentAimFov', {
    Text = "FOV Radius",
    Default = 600,
    Min = 100,
    Max = 1000,
    Rounding = 1,
    Callback = function(value)
        SilentAim.Fov = value
    end
})



-- // FOV Circle Drawing
local FovCircle = Drawing.new("Circle")
FovCircle.Filled = false
FovCircle.Color = Color3.new(1, 1, 1)
FovCircle.Thickness = 1
FovCircle.NumSides = 1000
FovCircle.Visible = false

RunService.Heartbeat:Connect(function()
    FovCircle.Visible = SilentAim.Enabled and SilentAim.ShowFov
    FovCircle.Position = UserInputService:GetMouseLocation()
    FovCircle.Radius = SilentAim.Fov
end)

Library:Notify('Silent Aim Loaded')
